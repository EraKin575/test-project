name: 'Install Go Tip'
description: 'Install Go Tip toolchain'
runs:
  using: "composite"
  steps:
    - name: Try to download Go Tip
      id: try-to-download-go-tip
      shell: bash
      run: |
        set -euo pipefail
        tip=$(git ls-remote https://github.com/golang/go.git HEAD | awk '{print $1;}')
        echo "Go Tip version: ${tip}"
        retries=5
        wait_time=30
        success=false
        for ((i=1; i<=retries; i++)); do
          url="https://storage.googleapis.com/go-build-snap/go/linux-amd64/${tip}.tar.gz"
          if curl -fsSL -o gotip.tar.gz "$url"; then
            success=true
            break
          fi
          echo "Failed to download. Retrying in $wait_time seconds..."
          sleep $wait_time
        done
        echo "download_status=${success}" >> $GITHUB_OUTPUT

    - name: Install Go Tip
      if: steps.try-to-download-go-tip.outputs.download_status == 'true'
      shell: bash
      run: |
        echo "Downloaded bundle:"
        ls -lah gotip.tar.gz
        export GOROOT="$HOME/sdk/gotip"
        export GOPATH="$HOME/go"
        mkdir -p $GOROOT
        tar -C $GOROOT --strip-components=1 -xzf gotip.tar.gz
        export PATH="$GOROOT/bin:$GOPATH/bin:$PATH"
        echo "GOROOT=$GOROOT" >> $GITHUB_ENV
        echo "GOPATH=$GOPATH" >> $GITHUB_ENV
        echo "PATH=$PATH" >> $GITHUB_ENV
        ln -sf $GOROOT/bin/go $HOME/bin/go
        echo "Active Go version after installation:"
        go version

    - name: Build Go Tip from source
      if: steps.try-to-download-go-tip.outputs.download_status == 'false'
      shell: bash
      run: |
        go install golang.org/dl/gotip@latest
        gotip download
        export GOROOT="$HOME/sdk/gotip"
        export GOPATH="$HOME/go"
        mkdir -p $GOROOT
        export PATH="$GOROOT/bin:$GOPATH/bin:$PATH"
        echo "GOROOT=$GOROOT" >> $GITHUB_ENV
        echo "GOPATH=$GOPATH" >> $GITHUB_ENV
        echo "PATH=$PATH" >> $GITHUB_ENV
        ln -sf $GOROOT/bin/go $HOME/bin/go
        echo "Active Go version after building from source:"
        gotip version

    - name: Check Go Version
      shell: bash
      run: |
        echo "Active Go version:"
        go version
